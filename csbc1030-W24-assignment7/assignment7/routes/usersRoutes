const express = require('express')
const router = express.Router()
const jwt = require('jsonwebtoken')
const authenticateToken = require('../middlewares/authMiddleware')
// Import the User model
const { User } = require('../models')

// Route for user login
router.post('/login', async (req, res) => {
  try {
    const { username, password } = req.body
    const user = await User.findOne({ where: { username, password } })
    console.log('user: ' + user)
    if (!user) {
      return res.status(401).json({ error: 'Invalid username or password' })
    }

    const token = jwt.sign({ username }, 'secret_key', { expiresIn: '1h' })
    res.json({ token })
  } catch (error) {
    console.error(error)
    res.status(500).json({ error: 'Internal server error' })
  }
})

// Route to get all users
router.get('/', async (req, res) => {
  try {
    const users = await User.findAll()
    res.json(users)
  } catch (error) {
    console.error(error)
    res.status(500).json({ error: 'Internal server error' })
  }
})

// Route to get a specific user by ID
router.get('/:id', authenticateToken, async (req, res) => {
  try {
    const user = await User.findByPk(req.params.id)
    if (!user) {
      return res.status(404).json({ error: 'User not found' })
    }
    res.json(user)
  } catch (error) {
    console.error(error)
    res.status(500).json({ error: 'Internal server error' })
  }
})

// Route to add a new user
router.post('/', authenticateToken, async (req, res) => {
  try {
    // Check if the authenticated user has ID 1 or username 'usernameTest'
    if (req.user.id === 1 || req.user.username === 'usernameTest') {
      const newUser = await User.create(req.body)
      res.status(201).json(newUser)
    } else {
      res.status(401).json({ error: 'Unauthorized' })
    }
  } catch (error) {
    console.error(error)
    res.status(500).json({ error: 'Internal server error' })
  }
})

module.exports = router
